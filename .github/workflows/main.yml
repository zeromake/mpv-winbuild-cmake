name: mpv
defaults:
  run:
    shell: bash

on:
  workflow_dispatch:
    inputs:
      mpv_tarball:
        description: 'Build latest mpv tarball'
        required: false
        default: true
        type: boolean
jobs:
  build_mpv:
    name: Building mpv
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        bit: [64]
    env:
      BIT: ${{ matrix.bit }}
    container:
      image: docker://ghcr.io/shinchiro/archlinux:latest
    outputs:
      mpv_ver: ${{ steps.build_mpv_step.outputs.mpv_ver }}
    steps:
      - name: Init variable
        run: |
          if [[ $BIT == 32 ]]; then
            echo "arch=i686" >> $GITHUB_ENV
          elif [[ $BIT == 64 ]]; then
            echo "arch=x86_64" >> $GITHUB_ENV
          elif [[ $BIT == 64-v3 ]]; then
            echo "arch=x86_64" >> $GITHUB_ENV
            echo "gcc_arch=-DGCC_ARCH=x86-64-v3" >> $GITHUB_ENV
            echo "x86_64_level=-v3" >> $GITHUB_ENV
          fi

      - name: Setup git config
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global pull.rebase true
          git config --global rebase.autoStash true
          git config --global fetch.prune true
          git config --global --add safe.directory $PWD

      - uses: actions/checkout@main
        with:
          ref: master

      - name: Loading build${{ matrix.bit }} cache
        uses: actions/cache/restore@main
        with:
          path: build${{ matrix.bit }}
          key: ${{ secrets.CACHE_VERSION }}-build${{ matrix.bit }}-${{ github.run_id }}
          restore-keys: |
            ${{ secrets.CACHE_VERSION }}-build${{ matrix.bit }}

      - name: Loading repository cache
        uses: actions/cache/restore@main
        with:
          path: src_packages
          key: ${{ secrets.CACHE_VERSION }}-repository-${{ github.run_id }}
          restore-keys: |
            ${{ secrets.CACHE_VERSION }}-repository

      - name: Loading rust toolchain cache
        uses: actions/cache/restore@main
        with:
          path: install_rustup
          key: ${{ secrets.CACHE_VERSION }}-rust_toolchain-${{ github.run_id }}
          restore-keys: |
            ${{ secrets.CACHE_VERSION }}-rust_toolchain

      - name: Downloading source
        run: |
          cmake -DTARGET_ARCH=${{ env.arch }}-w64-mingw32 ${{ env.gcc_arch }} -DALWAYS_REMOVE_BUILDFILES=ON -DSINGLE_SOURCE_LOCATION=$PWD/src_packages -DRUSTUP_LOCATION=$PWD/install_rustup -G Ninja -Bbuild$BIT -H.
          ninja -C build$BIT download || true

      - name: Building toolchain
        run: |
          if [[ ! "$(ls -A build$BIT/install/bin)" ]]; then ninja -C build$BIT gcc; fi

      - name: Building mpv
        id: build_mpv_step
        run: |
          ninja -C build$BIT update
          ninja -C build$BIT mpv
          echo "mpv_ver=UNKNOWN" >> $GITHUB_OUTPUT

      - name: Packaging mpv
        run: |
          mkdir -p release
          rm -rf build$BIT/mpv-debug*; ninja -C build$BIT mpv-packaging; mv build$BIT/mpv*.7z release
          ls -lh release

      - name: Copying ffmpeg
        run: |
          hash=$(git -C src_packages/ffmpeg rev-parse --short HEAD)
          7z a -m0=lzma2 -mx=9 -ms=on release$BIT/ffmpeg-${{ env.arch }}${{ env.x86_64_level }}-git-$hash.7z ./build$BIT/install/mingw/bin/ffmpeg.exe

      - name: Uploading lib
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: mpv_${{ matrix.bit }}
          path: release/mpv*.7z
          retention-days: 3

      - name: Cleaning build directory
        if: always()
        run: |
          rm -rf build$BIT/mpv*

      - name: Cleaning rust toolchain directory
        if: always()
        run: |
          rm -rf install_rustup/.cargo/registry/{cache,src}
          rm -rf install_rustup/.cargo/git/checkouts
          du -sh install_rustup

      - name: Saving build${{ matrix.bit }} cache
        uses: actions/cache/save@main
        if: always()
        with:
          path: build${{ matrix.bit }}
          key: ${{ secrets.CACHE_VERSION }}-build${{ matrix.bit }}-${{ github.run_id }}

      - name: Saving repository cache
        uses: actions/cache/save@main
        if: always()
        with:
          path: src_packages
          key: ${{ secrets.CACHE_VERSION }}-repository-${{ github.run_id }}

      - name: Saving rust toolchain cache
        uses: actions/cache/save@main
        if: always()
        with:
          path: install_rustup
          key: ${{ secrets.CACHE_VERSION }}-rust_toolchain-${{ github.run_id }}